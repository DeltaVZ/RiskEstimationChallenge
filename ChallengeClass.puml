@startuml
class challenge.ChallengeClass {
+ {static} short MAXIMUM_NORAD_ID
- MongoCollection<Document> conjunctionsCollection
+ <<Create>> ChallengeClass(MongoCollection<Document>)
+ void adjustConjunctionsBasedOnTheta()
+ void adjustConjunctionBasedOnTheta(String)
+ void adjustConjunctionBasedOnTheta(Document)
- boolean handleRiskPrediction(Document)
- RiskTrendAnalysisResult handleRiskTrends(List<Document>)
- boolean handleConsecutiveRiskTrends(Document,Document)
- void adjustCollisionProbability(Document,double)
- double[] getTimeToTca(Document)
- double[] getCollisionProbability(Document)
- boolean areTrendsValid(List<Document>)
- boolean isTrendValid(Document)
- void updateConjunction(Document)
}
class challenge.ChallengeClass.RiskTrendAnalysisResult {
- boolean shouldBeSuggested
- Double latestCollisionProbability
+ <<Create>> RiskTrendAnalysisResult()
+ boolean isShouldBeSuggested()
+ void setShouldBeSuggested(boolean)
+ Double getLatestCollisionProbability()
+ void setLatestCollisionProbability(Double)
}
class utils.Calculations {
+ {static} void analyze_theta(double[],double[],double[],double[],double[])
+ {static} void adjust_coll_prob(double[],double[],double[],double[],double[])
+ {static} boolean check_theta(double[])
}

challenge.ChallengeClass ..> utils.Calculations: <<use>>
challenge.ChallengeClass +.. challenge.ChallengeClass.RiskTrendAnalysisResult
@enduml